// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "KATHRA CodeGenerator API permetting generate sources",
    "title": "Kathra CodeGenerator Manager",
    "version": "1.1.0-SNAPSHOT",
    "x-artifactName": "codegen",
    "x-groupId": "org.kathra"
  },
  "basePath": "/api/v1",
  "paths": {
    "/generateFromTemplate": {
      "post": {
        "produces": [
          "application/json"
        ],
        "summary": "Generate archive from template",
        "operationId": "generateFromTemplate",
        "parameters": [
          {
            "x-exportParamName": "CodeGenTemplate",
            "description": "CodeGenTemplate to generate code",
            "name": "CodeGenTemplate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CodeGenTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Archive file",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/templates": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "Get all templates for codegen generation",
        "operationId": "getTemplates",
        "responses": {
          "200": {
            "description": "Get all CodeGenTemplate",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CodeGenTemplate"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CodeGenTemplate": {
      "type": "object",
      "properties": {
        "arguments": {
          "description": "CodeGen Argument",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeGenTemplateArgument"
          }
        },
        "name": {
          "description": "Template Name",
          "type": "string"
        }
      },
      "example": [
        {
          "arguments": [
            {
              "contrainst": "[A-Za-z0-9]",
              "key": "GROUP_NAME"
            },
            {
              "contrainst": "[A-Za-z0-9]",
              "key": "ARTIFACT_NAME"
            },
            {
              "contrainst": "[0-9]+\\.[0-9]+\\.[0-9]+",
              "key": "VERSION"
            },
            {
              "contrainst": ".*",
              "key": "OPEN_API_SPEC"
            }
          ],
          "name": "JavaClient"
        },
        {
          "arguments": [
            {
              "contrainst": "[A-Za-z0-9]",
              "key": "CHART_NAME"
            },
            {
              "contrainst": "[0-9]+\\.[0-9]+\\.[0-9]+",
              "key": "CHART_VERSION"
            },
            {
              "contrainst": "[A-Za-z0-9]",
              "key": "CHART_DESCRIPTION"
            },
            {
              "contrainst": "[0-9]+\\.[0-9]+\\.[0-9]+",
              "key": "APP_VERSION"
            },
            {
              "key": "IMAGE_NAME",
              "value": ".+"
            },
            {
              "key": "IMAGE_TAG",
              "value": ".+"
            },
            {
              "key": "REGISTRY_HOST",
              "value": ".+"
            }
          ],
          "name": "HelmRestApiService"
        }
      ]
    },
    "CodeGenTemplateArgument": {
      "type": "object",
      "properties": {
        "contrainst": {
          "description": "Argument constraint",
          "type": "string"
        },
        "key": {
          "description": "Argument key to generate codegen",
          "type": "string"
        },
        "value": {
          "description": "Argument value to generate codegen",
          "type": "string"
        }
      },
      "example": {
        "contrainst": "[A-Za-z0-9]",
        "key": "CHART_NAME",
        "value": "MyFirstChart"
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "KATHRA CodeGenerator API permetting generate sources",
    "title": "Kathra CodeGenerator Manager",
    "version": "1.1.0-SNAPSHOT",
    "x-artifactName": "codegen",
    "x-groupId": "org.kathra"
  },
  "basePath": "/api/v1",
  "paths": {
    "/generateFromTemplate": {
      "post": {
        "produces": [
          "application/json"
        ],
        "summary": "Generate archive from template",
        "operationId": "generateFromTemplate",
        "parameters": [
          {
            "x-exportParamName": "CodeGenTemplate",
            "description": "CodeGenTemplate to generate code",
            "name": "CodeGenTemplate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CodeGenTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Archive file",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/templates": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "Get all templates for codegen generation",
        "operationId": "getTemplates",
        "responses": {
          "200": {
            "description": "Get all CodeGenTemplate",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CodeGenTemplate"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CodeGenTemplate": {
      "type": "object",
      "properties": {
        "arguments": {
          "description": "CodeGen Argument",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeGenTemplateArgument"
          }
        },
        "name": {
          "description": "Template Name",
          "type": "string"
        }
      },
      "example": [
        {
          "arguments": [
            {
              "contrainst": "[A-Za-z0-9]",
              "key": "GROUP_NAME"
            },
            {
              "contrainst": "[A-Za-z0-9]",
              "key": "ARTIFACT_NAME"
            },
            {
              "contrainst": "[0-9]+\\.[0-9]+\\.[0-9]+",
              "key": "VERSION"
            },
            {
              "contrainst": ".*",
              "key": "OPEN_API_SPEC"
            }
          ],
          "name": "JavaClient"
        },
        {
          "arguments": [
            {
              "contrainst": "[A-Za-z0-9]",
              "key": "CHART_NAME"
            },
            {
              "contrainst": "[0-9]+\\.[0-9]+\\.[0-9]+",
              "key": "CHART_VERSION"
            },
            {
              "contrainst": "[A-Za-z0-9]",
              "key": "CHART_DESCRIPTION"
            },
            {
              "contrainst": "[0-9]+\\.[0-9]+\\.[0-9]+",
              "key": "APP_VERSION"
            },
            {
              "key": "IMAGE_NAME",
              "value": ".+"
            },
            {
              "key": "IMAGE_TAG",
              "value": ".+"
            },
            {
              "key": "REGISTRY_HOST",
              "value": ".+"
            }
          ],
          "name": "HelmRestApiService"
        }
      ]
    },
    "CodeGenTemplateArgument": {
      "type": "object",
      "properties": {
        "contrainst": {
          "description": "Argument constraint",
          "type": "string"
        },
        "key": {
          "description": "Argument key to generate codegen",
          "type": "string"
        },
        "value": {
          "description": "Argument value to generate codegen",
          "type": "string"
        }
      },
      "example": {
        "contrainst": "[A-Za-z0-9]",
        "key": "CHART_NAME",
        "value": "MyFirstChart"
      }
    }
  }
}`))
}
